{"version":3,"sources":["redux/actions/actionTypes.js","components/Header.js","reusable/LinkItem.js","firebase/firebase.js","components/Menu.js","components/News.js","components/NewPostMobile.js","reusable/Button.js","reusable/Input.js","components/NewPost.js","components/Post.js","components/PostsList.js","pages/Home.js","pages/Login.js","pages/Main.js","pages/SignUp.js","pages/Profile.js","pages/NewPostPage.js","App.js","redux/actions/userActions.js","redux/actions/postActions.js","redux/reducers/globalReducer.js","redux/reducers/userReducer.js","redux/reducers/postReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["SIGN_UP","LOGIN","SIGN_OUT","GET_USER_DATA","GET_POSTS","ADD_POST","REMOVE_POST","NEW_POST_MOBILE_OPEN","NEW_POST_MOBILE_CLOSE","CURRENT_PAGE","Header","user","useSelector","state","currentUser","title","global","currentPage","newPostIsOpen","dispatch","useDispatch","history","useHistory","className","Fragment","IconButton","onClick","push","type","actions","payload","Avatar","HeaderLink","icon","path","isActive","func","to","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","firestore","Menu","LinkItem","fontSize","a","signOut","then","localStorage","removeItem","console","log","catch","err","code","message","News","NewPostMobile","Button","cls","Input","name","value","ph","required","htmlFor","onChange","placeholder","NewPost","useState","post","setPost","image","setImage","postErr","setPostErr","imageErr","setImageErr","handleSubmit","e","preventDefault","id","Math","floor","random","randomId","toString","date","Date","validImg","test","validPost","length","newPost","displayName","content","collection","doc","update","posts","FieldValue","arrayUnion","set","onSubmit","cols","rows","target","maxLength","Post","userPosts","author","setAuthor","u","JSON","parse","getItem","useEffect","includes","toLocaleDateString","delete","uid","arrayRemove","src","alt","PostsList","sort","b","dateA","map","Home","Login","setErr","email","setEmail","password","setPassword","handleValue","signInWithEmailAndPassword","userCredential","setItem","stringify","setTimeout","Main","SignUp","fullName","setFullName","setDisplayName","dob","setDob","confirmPassword","setConfirmPassword","createUserWithEmailAndPassword","createdAt","validate","Profile","NewPostPage","connect","getUserData","getState","userRef","get","data","getPosts","postsRef","querySnaphot","forEach","exact","component","initialState","globalReducer","action","userReducer","postReducer","filter","rootReducer","combineReducers","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9b0efe6.chunk.js","sourcesContent":["// user\r\nexport const SIGN_UP = \"SIGN_UP\";\r\nexport const LOGIN = \"LOGIN\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const GET_USER_DATA = \"GET_USER_DATA\";\r\n// data\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const REMOVE_POST = \"REMOVE_POST\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\n// using\r\nexport const BACK = \"BACK\";\r\nexport const NEW_POST_MOBILE_OPEN = \"NEW_POST_MOBILE_OPEN\";\r\nexport const NEW_POST_MOBILE_CLOSE = \"NEW_POST_MOBILE_CLOSE\";\r\nexport const CURRENT_PAGE = \"CURRENT_PAGE\";\r\n","import React from \"react\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport * as actions from \"../redux/actions/actionTypes\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const user = useSelector((state) => state.user.currentUser);\r\n  const title = useSelector((state) => state.global.currentPage);\r\n  const newPostIsOpen = useSelector((state) => state.global.newPostIsOpen);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <header className='header'>\r\n      {user ? (\r\n        <React.Fragment>\r\n          {newPostIsOpen ? (\r\n            <IconButton\r\n              onClick={() => {\r\n                history.push(\"/notwitter\");\r\n                dispatch({ type: actions.CURRENT_PAGE, payload: \"Home\" });\r\n                dispatch({ type: actions.NEW_POST_MOBILE_CLOSE });\r\n              }}\r\n            >\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n          ) : (\r\n            <Avatar />\r\n          )}\r\n          <h3>{title}</h3>\r\n        </React.Fragment>\r\n      ) : (\r\n        <h3>noTwitter</h3>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HeaderLink = ({ icon, title, path, isActive, func }) => {\r\n  return (\r\n    <li\r\n      className={`linkItem ${isActive ? \"linkItem--isActive\" : \"\"}`}\r\n      onClick={func}\r\n    >\r\n      <Link to={path}>\r\n        {icon} <p>{title}</p>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default HeaderLink;\r\n","import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyB_LzO_cPoxv5uXPUx_VdVsHKM9WbTn0lo\",\r\n  authDomain: \"notwitter-b1e9c.firebaseapp.com\",\r\n  projectId: \"notwitter-b1e9c\",\r\n  storageBucket: \"notwitter-b1e9c.appspot.com\",\r\n  messagingSenderId: \"769546520504\",\r\n  appId: \"1:769546520504:web:7802f06a5bb9745111314d\",\r\n  measurementId: \"G-L3ZWLM4FNL\",\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\nfirebase.analytics();\r\n\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore(app);\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport LinkItem from \"../reusable/LinkItem\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { useSelector } from \"react-redux\";\r\nimport * as actions from \"../redux/actions/actionTypes\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { auth } from \"../firebase/firebase\";\r\n\r\nconst Menu = () => {\r\n  const user = useSelector((state) => state.user.user);\r\n  const currentPage = useSelector((state) => state.global.currentPage);\r\n  const dispatch = useDispatch();\r\n  return user ? (\r\n    <header className='menu'>\r\n      <nav>\r\n        <ul>\r\n          <LinkItem\r\n            path='/notwitter'\r\n            title='Home'\r\n            icon={<HomeIcon fontSize='large' />}\r\n            isActive={currentPage === \"Home\"}\r\n            func={() =>\r\n              dispatch({ type: actions.CURRENT_PAGE, payload: \"Home\" })\r\n            }\r\n          />\r\n          <LinkItem\r\n            path='/notwitter/profile'\r\n            title='Profile'\r\n            icon={<FaceIcon fontSize='large' />}\r\n            isActive={currentPage === \"Profile\"}\r\n            func={() =>\r\n              dispatch({ type: actions.CURRENT_PAGE, payload: \"Profile\" })\r\n            }\r\n          />\r\n          <LinkItem\r\n            path='/notwitter'\r\n            title='Log Out'\r\n            func={async () => {\r\n              await auth\r\n                .signOut()\r\n                .then(() => {\r\n                  localStorage.removeItem(\"notwitterUser\");\r\n                  localStorage.removeItem(\"notwitterCurrentUser\");\r\n                  dispatch({ type: actions.SIGN_OUT });\r\n                  console.log(\"Signed out.\");\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err.code);\r\n                  console.log(err.message);\r\n                });\r\n            }}\r\n            icon={<ExitToAppIcon fontSize='large' />}\r\n          />\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  ) : null;\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst News = () => {\r\n  const user = useSelector((state) => state.user.currentUser);\r\n\r\n  return user ? <aside className='news'></aside> : null;\r\n};\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport * as actions from \"../redux/actions/actionTypes\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NewPostMobile = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Link\r\n      className='newPostMobile'\r\n      to='/notwitter/newpost'\r\n      onClick={() => {\r\n        dispatch({ type: actions.CURRENT_PAGE, payload: \"New Post\" });\r\n        dispatch({ type: actions.NEW_POST_MOBILE_OPEN });\r\n      }}\r\n    >\r\n      <CreateIcon fontSize='large' />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NewPostMobile;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ title, type, cls }) => {\r\n  return (\r\n    <button type={type} className={`btn ${cls ? cls : \"\"}`}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, type, value, func, ph, required, err }) => {\r\n  return (\r\n    <div className='input'>\r\n      <label htmlFor={name}>\r\n        {name}\r\n        {required ? \"*\" : \"\"}\r\n      </label>\r\n      <input\r\n        className={err ? \"input--err\" : \"\"}\r\n        type={type}\r\n        value={value}\r\n        onChange={func}\r\n        name={name}\r\n        placeholder={ph}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport Button from \"../reusable/Button\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Input from \"../reusable/Input\";\r\nimport { db } from \"../firebase/firebase\";\r\nimport * as actions from \"../redux/actions/actionTypes\";\r\nimport firebase from \"../firebase/firebase\";\r\n\r\nconst NewPost = () => {\r\n  const [post, setPost] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [postErr, setPostErr] = useState(false);\r\n  const [imageErr, setImageErr] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const newPostIsOpen = useSelector((state) => state.global.newPostIsOpen);\r\n  const user = useSelector((state) => state.user.user);\r\n  const currentUser = useSelector((state) => state.user.currentUser);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const randomId = () => Math.floor(Math.random() * 1000000000);\r\n    const id = randomId().toString();\r\n    const date = new Date().toString();\r\n    const validImg = image\r\n      ? /^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/g.test(\r\n          image\r\n        )\r\n      : true;\r\n    const validPost = post.length > 0;\r\n    validImg === false ? setImageErr(true) : setImageErr(false);\r\n    validPost ? setPostErr(false) : setPostErr(true);\r\n    const newPost = {\r\n      currentUser: currentUser.displayName,\r\n      id,\r\n      user,\r\n      content: post,\r\n      date,\r\n      image,\r\n    };\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(user)\r\n      .update({\r\n        posts: firebase.firestore.FieldValue.arrayUnion(id),\r\n      });\r\n    if (validImg && validPost) {\r\n      await db\r\n        .collection(\"posts\")\r\n        .doc(id)\r\n        .set(newPost)\r\n        .then(() => {\r\n          dispatch({\r\n            type: actions.ADD_POST,\r\n            payload: newPost,\r\n          });\r\n          setPost(\"\");\r\n          setImage(\"\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.code);\r\n          console.log(err.message);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div className={`newPost ${newPostIsOpen ? \"newPost--isOpen\" : \"\"}`}>\r\n      <Avatar />\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          placeholder=\"What's happening?\"\r\n          cols='30'\r\n          rows='7'\r\n          value={post}\r\n          onChange={(e) => {\r\n            setPost(e.target.value);\r\n          }}\r\n          required={postErr ? false : true}\r\n          maxLength='255'\r\n        ></textarea>\r\n        <Input\r\n          type='text'\r\n          name='Image url'\r\n          ph='https://example.com/images/uploads/94302/'\r\n          value={image}\r\n          err={imageErr ? true : false}\r\n          func={(e) => {\r\n            setImage(e.target.value);\r\n          }}\r\n        />\r\n        <Button type='submit' title='Post' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport { db } from \"../firebase/firebase\";\r\nimport * as actions from \"../redux/actions/actionTypes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport firebase from \"../firebase/firebase\";\r\n\r\nconst Post = ({ post }) => {\r\n  const userPosts = useSelector((state) => state.user.currentUser);\r\n  const [author, setAuthor] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { currentUser, date, content, id, image } = post;\r\n  const u = JSON.parse(localStorage.getItem(\"notwitterCurrentUser\"));\r\n  useEffect(() => {\r\n    if (u) {\r\n      setAuthor(u.posts.includes(id));\r\n    }\r\n  }, [id, u, userPosts]);\r\n  console.log(author);\r\n  return (\r\n    <article className='post'>\r\n      <aside className='post__avatar'>\r\n        <Avatar />\r\n      </aside>\r\n      <div className='post__body'>\r\n        <header className='post__header'>\r\n          <h4 className='post__author'>{currentUser}</h4>\r\n          <p className='post__date'>{new Date(date).toLocaleDateString()}</p>\r\n          {author ? (\r\n            <IconButton\r\n              onClick={async () => {\r\n                await db\r\n                  .collection(\"posts\")\r\n                  .doc(id)\r\n                  .delete()\r\n                  .then(async () => {\r\n                    await db\r\n                      .collection(\"users\")\r\n                      .doc(u.uid)\r\n                      .update({\r\n                        posts: firebase.firestore.FieldValue.arrayRemove(id),\r\n                      });\r\n                    dispatch({ type: actions.REMOVE_POST, payload: id });\r\n                  });\r\n              }}\r\n            >\r\n              <HighlightOffIcon />\r\n            </IconButton>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </header>\r\n        <p>{content}</p>\r\n        <img src={image} alt={image} />\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PostsList = () => {\r\n  const postsState = useSelector((state) => state.posts.posts);\r\n  const posts =\r\n    postsState || JSON.parse(localStorage.getItem(\"notwitterPosts\"));\r\n  return (\r\n    <ul className='postsList'>\r\n      {posts.length > 0 ? (\r\n        posts\r\n          .sort((a, b) => {\r\n            const dateA = new Date(a.date);\r\n            const dateB = new Date(b.date);\r\n            return dateB - dateA;\r\n          })\r\n          .map((post) => {\r\n            return <Post key={post.id} post={post} />;\r\n          })\r\n      ) : (\r\n        <p className='postsList__noPosts'>No posts.</p>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PostsList;\r\n","import React from \"react\";\r\nimport NewPost from \"../components/NewPost\";\r\nimport PostsList from \"../components/PostsList\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='home'>\r\n      <NewPost />\r\n      <PostsList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Input from \"../reusable/Input\";\r\nimport Button from \"../reusable/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../redux/actions/actionTypes\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { auth } from \"../firebase/firebase\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const [err, setErr] = useState(\"Already registered?\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const handleValue = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"Email\") setEmail(value);\r\n    if (name === \"Password\") setPassword(value);\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        dispatch({\r\n          type: actions.LOGIN,\r\n          payload: userCredential.user.uid,\r\n        });\r\n        localStorage.setItem(\r\n          \"notwitterUser\",\r\n          JSON.stringify(userCredential.user.uid)\r\n        );\r\n\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n      })\r\n      .catch((err) => {\r\n        setErr(err.message);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setErr(\"Already registered?\");\r\n    }, 3000);\r\n  }, [err]);\r\n  return (\r\n    <div className='form login'>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <p>{err}</p>\r\n        <Input\r\n          name='Email'\r\n          type='text'\r\n          value={email}\r\n          func={(e) => handleValue(e)}\r\n        />\r\n        <Input\r\n          name='Password'\r\n          type='password'\r\n          value={password}\r\n          func={(e) => handleValue(e)}\r\n        />\r\n        <Link to='/notwitter/signup'>Don't have an account?</Link>\r\n        <Button title='Log In' type='submit' cls='formBtn' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Home from \"./Home\";\r\nimport Login from \"./Login\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Main = () => {\r\n  const user = useSelector((state) => state.user.user);\r\n  return <section className='page main'>{user ? <Home /> : <Login />}</section>;\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Input from \"../reusable/Input\";\r\nimport Button from \"../reusable/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth, db } from \"../firebase/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../redux/actions/actionTypes\";\r\n\r\nconst SignUp = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [err, setErr] = useState(\"Provide your details.\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setErr(\"Provide your details.\");\r\n    }, 3000);\r\n  }, [err]);\r\n\r\n  const handleValue = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"Full name\") setFullName(value);\r\n    if (name === \"Display name\") setDisplayName(value);\r\n    if (name === \"Date of birth\") setDob(value);\r\n    if (name === \"Email\") setEmail(value);\r\n    if (name === \"Password\") setPassword(value);\r\n    if (name === \"Confirm password\") setConfirmPassword(value);\r\n  };\r\n  const handleSubmit = async () => {\r\n    await auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        const uid = userCredential.user.uid;\r\n        console.log(uid);\r\n        db.collection(\"users\").doc(uid).set({\r\n          fullName,\r\n          displayName,\r\n          dob,\r\n          email,\r\n          uid,\r\n          createdAt: new Date().toLocaleDateString(),\r\n        });\r\n        dispatch({ type: actions.SIGN_UP, payload: uid });\r\n        localStorage.setItem(\"notwitterUser\", JSON.stringify(uid));\r\n        setFullName(\"\");\r\n        setDisplayName(\"\");\r\n        setDob(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setConfirmPassword(\"\");\r\n        history.push(\"/notwitter\");\r\n      })\r\n      .catch((err) => {\r\n        setErr(err.message);\r\n        console.log(err.code);\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const validate = () => {\r\n    if (fullName.length <= 6) {\r\n      setErr(\"Full name should be at least 6 characters.\");\r\n    } else if (!/^[a-z\\s]+$/i.test(fullName)) {\r\n      setErr(\"Full name should contain only a letters.\");\r\n    } else if (displayName.length < 3) {\r\n      setErr(\"Display name should be at least 3 characters.\");\r\n    } else if (dob.length < 8) {\r\n      setErr(\"Date of birth should contain 8 numbers.\");\r\n    } else if (!/^[0-9]+$/.test(dob)) {\r\n      setErr(\"Date of birth should contain only numbers.\");\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\r\n      setErr(\"Invalid email.\");\r\n    } else if (password !== confirmPassword) {\r\n      setErr(\"Passwords not match.\");\r\n    } else if (password.length < 6 || confirmPassword < 6) {\r\n      setErr(\"Password should contain at least 6 characters.\");\r\n    } else {\r\n      return handleSubmit();\r\n    }\r\n  };\r\n  return (\r\n    <section className='page main'>\r\n      <div className='form signup'>\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            validate();\r\n          }}\r\n        >\r\n          <p>{err}</p>\r\n          <Input\r\n            name='Full name'\r\n            type='text'\r\n            ph='Joe Doe'\r\n            value={fullName}\r\n            func={(e) => handleValue(e)}\r\n            required\r\n            err={/^[a-z\\s]+$/i.test(fullName) && fullName.length > 3}\r\n          />\r\n          <Input\r\n            name='Display name'\r\n            type='text'\r\n            ph='min 3 char'\r\n            value={displayName}\r\n            func={(e) => handleValue(e)}\r\n            required\r\n            err={displayName.length >= 3}\r\n          />\r\n          <Input\r\n            name='Date of birth'\r\n            type='number'\r\n            ph='ddmmyyyy'\r\n            value={dob}\r\n            func={(e) => handleValue(e)}\r\n            required\r\n            err={/^[0-9]+$/.test(dob) && dob.length === 8}\r\n          />\r\n          <Input\r\n            name='Email'\r\n            type='text'\r\n            ph='example@gmail.com'\r\n            value={email}\r\n            func={(e) => handleValue(e)}\r\n            required\r\n            err={/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)}\r\n          />\r\n          <Input\r\n            name='Password'\r\n            type='password'\r\n            ph='min 6 char'\r\n            value={password}\r\n            func={(e) => handleValue(e)}\r\n            required\r\n            err={password.length >= 6 && password === confirmPassword}\r\n          />\r\n          <Input\r\n            name='Confirm password'\r\n            type='password'\r\n            ph='min 6 char'\r\n            value={confirmPassword}\r\n            func={(e) => handleValue(e)}\r\n            required\r\n            err={confirmPassword.length >= 6 && password === confirmPassword}\r\n          />\r\n          <Link to='/notwitter'>Already have an account?</Link>\r\n          <Button title='Sign Up' type='submit' cls='formBtn' />\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\n\r\nconst Profile = () => {\r\n  const { fullName, displayName, dob, email, createdAt } = JSON.parse(\r\n    localStorage.getItem(\"notwitterCurrentUser\")\r\n  );\r\n  return (\r\n    <section className='page profile'>\r\n      <div className='profile__inner'>\r\n        <h3>\r\n          Hello <span>{displayName}</span>\r\n        </h3>\r\n        <ul>\r\n          <li>\r\n            <span>Full name:</span>\r\n            <span>{fullName}</span>\r\n          </li>\r\n          <li>\r\n            <span>Display name:</span>\r\n            <span>{displayName}</span>\r\n          </li>\r\n          <li>\r\n            <span>Email:</span>\r\n            <span>{email}</span>\r\n          </li>\r\n          <li>\r\n            <span>Date of birth:</span>\r\n            <span>{dob}</span>\r\n          </li>\r\n          <li>\r\n            <span>Joined at:</span>\r\n            <span>{createdAt}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport NewPost from \"../components/NewPost\";\r\n\r\nconst NewPostPage = () => {\r\n  return (\r\n    <section className='newPostPage'>\r\n      <NewPost />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NewPostPage;\r\n","import React, { useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Menu from \"./components/Menu\";\nimport News from \"./components/News\";\nimport NewPostMobile from \"./components/NewPostMobile\";\nimport Main from \"./pages/Main\";\nimport SignUp from \"./pages/SignUp\";\nimport Profile from \"./pages/Profile\";\nimport { connect, useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"./redux/actions/actionTypes\";\nimport { getUserData } from \"./redux/actions/userActions\";\nimport { getPosts } from \"./redux/actions/postActions\";\nimport NewPostPage from \"./pages/NewPostPage\";\n\nfunction App({ getUserData, getPosts }) {\n  const user = useSelector((state) => state.user.user);\n  const u = localStorage.getItem(\"notwitterUser\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (u) {\n      dispatch({ type: actions.LOGIN, payload: JSON.parse(u) });\n    }\n  }, [user, dispatch, u]);\n  useEffect(() => {\n    if (user) getUserData();\n  }, [getUserData, user]);\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div className='app'>\n      <Menu />\n      <main className='container'>\n        <Header />\n        <Switch>\n          <Route exact path='/noTwitter' component={Main} />\n          <Route path='/noTwitter/signup' component={SignUp} />\n          <Route path='/noTwitter/newpost' component={NewPostPage} />\n          <Route path='/noTwitter/profile' component={Profile} />\n        </Switch>\n      </main>\n      {user ? <NewPostMobile /> : null}\n      <News />\n    </div>\n  );\n}\n\nexport default connect(null, { getUserData, getPosts })(App);\n","import * as actions from \"./actionTypes\";\r\nimport { db } from \"../../firebase/firebase\";\r\n\r\nexport const userSignUp = (user) => ({\r\n  type: actions.SIGN_UP,\r\n  payload: user,\r\n});\r\nexport const userLogIn = (user) => ({\r\n  type: actions.LOGIN,\r\n  payload: user,\r\n});\r\nexport const userSignOut = () => ({\r\n  type: actions.LOGIN,\r\n});\r\nexport const userSetProfile = (user) => ({\r\n  type: actions.LOGIN,\r\n  payload: user,\r\n});\r\nexport const getUserData = () => async (dispatch, getState) => {\r\n  const { user } = getState();\r\n  const userRef = db.collection(\"users\").doc(user.user);\r\n  await userRef\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.data()) {\r\n        dispatch({ type: actions.GET_USER_DATA, payload: doc.data() });\r\n        localStorage.setItem(\r\n          \"notwitterCurrentUser\",\r\n          JSON.stringify(doc.data())\r\n        );\r\n      } else {\r\n        console.log(\"No such document.\");\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.code);\r\n      console.log(err.message);\r\n    });\r\n};\r\n","import * as actions from \"../actions/actionTypes\";\r\nimport { db } from \"../../firebase/firebase\";\r\n\r\nexport const addPost = (post) => ({\r\n  type: actions.ADD_POST,\r\n  payload: post,\r\n});\r\nexport const removePost = (id) => ({\r\n  type: actions.REMOVE_POST,\r\n  payload: id,\r\n});\r\nexport const getPosts = () => async (dispatch, getState) => {\r\n  const postsRef = db.collection(\"posts\");\r\n  await postsRef\r\n    .get()\r\n    .then((querySnaphot) => {\r\n      querySnaphot.forEach((doc) => {\r\n        if (doc.data()) {\r\n          dispatch({\r\n            type: actions.GET_POSTS,\r\n            payload: doc.data(),\r\n          });\r\n          return doc.data();\r\n        } else {\r\n          console.log(\"No such document.\");\r\n        }\r\n      });\r\n    })\r\n    .then(() => {\r\n      const { posts } = getState();\r\n      localStorage.setItem(\"notwitterPosts\", JSON.stringify(posts.posts));\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import * as actions from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  currentPage: \"Home\",\r\n  newPostIsOpen: false,\r\n};\r\n\r\nconst globalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.CURRENT_PAGE:\r\n      return { ...state, currentPage: action.payload };\r\n    case actions.NEW_POST_MOBILE_OPEN:\r\n      return { ...state, newPostIsOpen: true };\r\n    case actions.NEW_POST_MOBILE_CLOSE:\r\n      return { ...state, newPostIsOpen: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default globalReducer;\r\n","import * as actions from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  currentUser: null,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.SIGN_UP:\r\n      return { ...state, user: action.payload };\r\n    case actions.LOGIN:\r\n      return { ...state, user: action.payload };\r\n    case actions.SIGN_OUT:\r\n      return { ...state, user: null, currentUser: null };\r\n    case actions.GET_USER_DATA:\r\n      return { ...state, currentUser: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import * as actions from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n};\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.ADD_POST:\r\n      return { ...state, posts: [...state.posts, action.payload] };\r\n    case actions.REMOVE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post.id !== action.payload),\r\n      };\r\n    case actions.GET_POSTS:\r\n      return { ...state, posts: [...state.posts, action.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport globalReducer from \"./globalReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport postReducer from \"./postReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  global: globalReducer,\r\n  posts: postReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst middlewares = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}